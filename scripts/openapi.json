{
  "openapi": "3.0.0",
  "paths": {
    "/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signup successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Sign up a new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Login user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Refresh JWT token",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/verify-email": {
      "post": {
        "operationId": "AuthController_verifyEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Verify email",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset link sent",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Request password reset",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "summary": "Reset password",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Logout user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/2fa/setup": {
      "post": {
        "operationId": "AuthController_setup2FA",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFASetupDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "2FA QR code and secret",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Setup 2FA (returns QR code)",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/2fa/enable": {
      "post": {
        "operationId": "AuthController_enable2FA",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFAVerifyDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "2FA enabled",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Enable 2FA (verify code)",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/2fa/disable": {
      "post": {
        "operationId": "AuthController_disable2FA",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TwoFAVerifyDto"
              },
              "examples": {
                "user": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "2FA disabled",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Disable 2FA (verify code)",
        "tags": [
          "auth"
        ]
      }
    },
    "/users/me": {
      "get": {
        "operationId": "UsersController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns the current user profile.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1234567890abcdef12345678",
                    "username": "testuser",
                    "email": "test@example.com",
                    "createdAt": "2023-10-27T10:00:00.000Z",
                    "updatedAt": "2023-10-27T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UsersController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDto"
              },
              "examples": {
                "user": {
                  "value": {
                    "username": "newusername",
                    "email": "newemail@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates the current user profile.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1234567890abcdef12345678",
                    "username": "newusername",
                    "email": "newemail@example.com",
                    "createdAt": "2023-10-27T10:00:00.000Z",
                    "updatedAt": "2023-10-27T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/me/password": {
      "patch": {
        "operationId": "UsersController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              },
              "examples": {
                "user": {
                  "value": {
                    "currentPassword": "oldpassword",
                    "newPassword": "newpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Changes the current user password.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1234567890abcdef12345678",
                    "username": "testuser",
                    "email": "test@example.com",
                    "createdAt": "2023-10-27T10:00:00.000Z",
                    "updatedAt": "2023-10-27T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              },
              "examples": {
                "user": {
                  "value": {
                    "username": "newadmin",
                    "email": "admin@example.com",
                    "password": "adminpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new user.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "id": "1234567890abcdef12345679",
                    "username": "newadmin",
                    "email": "admin@example.com",
                    "createdAt": "2023-10-27T10:00:00.000Z",
                    "updatedAt": "2023-10-27T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_listUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a list of all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1234567890abcdef12345678"
                      },
                      "username": {
                        "type": "string",
                        "example": "testuser"
                      },
                      "email": {
                        "type": "string",
                        "example": "test@example.com"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2023-10-27T10:00:00.000Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2023-10-27T10:00:00.000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/access-control/roles/global": {
      "post": {
        "operationId": "AccessControlController_createGlobalRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Global role created"
          }
        },
        "summary": "Create a global role",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/roles/internal": {
      "post": {
        "operationId": "AccessControlController_createInternalRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Internal role created"
          }
        },
        "summary": "Create an internal (center) role",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/permissions": {
      "post": {
        "operationId": "AccessControlController_createPermission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created"
          }
        },
        "summary": "Create a permission",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/assign-role": {
      "post": {
        "operationId": "AccessControlController_assignRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role assigned to user"
          }
        },
        "summary": "Assign a role to a user (context-aware)",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/assign-permission": {
      "post": {
        "operationId": "AccessControlController_assignUserPermission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission assigned to user"
          }
        },
        "summary": "Assign a permission override to a user (context-aware)",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/assign-permission-to-role": {
      "post": {
        "operationId": "AccessControlController_assignPermissionToRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission assigned to role"
          }
        },
        "summary": "Assign a permission to a role",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/user/{userId}/roles": {
      "get": {
        "operationId": "AccessControlController_getUserRoles",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User roles with scopes"
          }
        },
        "summary": "Get user roles with scopes",
        "tags": [
          "access-control"
        ]
      }
    },
    "/access-control/user/{userId}/permissions": {
      "get": {
        "operationId": "AccessControlController_getUserPermissions",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions (resolved + overrides)"
          }
        },
        "summary": "Get user permissions (resolved + overrides)",
        "tags": [
          "access-control"
        ]
      }
    }
  },
  "info": {
    "title": "LMS SaaS API",
    "description": "API documentation for the LMS SaaS platform",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "SignupDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password (min 6 chars)",
            "example": "password123"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          }
        },
        "required": [
          "email",
          "password",
          "fullName"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "test@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "password123"
          },
          "code": {
            "type": "string",
            "description": "2FA code (if enabled)",
            "example": "123456"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {}
      },
      "VerifyEmailDto": {
        "type": "object",
        "properties": {}
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {}
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {}
      },
      "TwoFASetupDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "User password for 2FA setup",
            "example": "password123"
          }
        },
        "required": [
          "password"
        ]
      },
      "TwoFAVerifyDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "2FA verification code",
            "example": "123456"
          }
        },
        "required": [
          "code"
        ]
      },
      "UpdateProfileDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "example": "Jane Doe"
          }
        }
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "Current password",
            "example": "oldpassword"
          },
          "newPassword": {
            "type": "string",
            "description": "New password (min 6 chars)",
            "example": "newpassword123"
          }
        },
        "required": [
          "oldPassword",
          "newPassword"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user",
            "example": "Jane Doe"
          },
          "password": {
            "type": "string",
            "description": "User password (optional for system-generated users)",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "fullName"
        ]
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Role name",
            "example": "Admin"
          },
          "scope": {
            "type": "string",
            "description": "Role scope (GLOBAL or CENTER)",
            "enum": [
              "GLOBAL",
              "CENTER"
            ],
            "example": "GLOBAL"
          },
          "centerId": {
            "type": "string",
            "description": "Center ID (required if scope is CENTER)",
            "example": "center123"
          },
          "metadata": {
            "type": "object",
            "description": "Optional metadata for the role",
            "example": "{ \"color\": \"blue\" }"
          },
          "isPublic": {
            "type": "boolean",
            "description": "Is this role public?",
            "example": false
          }
        },
        "required": [
          "name",
          "scope"
        ]
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Permission action (e.g., user:view, center:manage)",
            "example": "user:view"
          }
        },
        "required": [
          "action"
        ]
      },
      "AssignRoleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User ID",
            "example": "user123"
          },
          "roleId": {
            "type": "string",
            "description": "Role ID",
            "example": "role123"
          },
          "scopeType": {
            "type": "string",
            "description": "Scope type (GLOBAL or CENTER)",
            "enum": [
              "GLOBAL",
              "CENTER"
            ],
            "example": "GLOBAL"
          },
          "scopeId": {
            "type": "string",
            "description": "Scope ID (centerId if CENTER, null if GLOBAL)",
            "example": "center123"
          }
        },
        "required": [
          "userId",
          "roleId",
          "scopeType"
        ]
      },
      "AssignPermissionDto": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "string",
            "description": "Permission ID",
            "example": "perm123"
          },
          "userId": {
            "type": "string",
            "description": "User ID (for per-user override)",
            "example": "user123"
          },
          "roleId": {
            "type": "string",
            "description": "Role ID (for role assignment)",
            "example": "role123"
          },
          "scopeType": {
            "type": "string",
            "description": "Scope type (GLOBAL or CENTER)",
            "enum": [
              "GLOBAL",
              "CENTER"
            ],
            "example": "GLOBAL"
          },
          "scopeId": {
            "type": "string",
            "description": "Scope ID (centerId if CENTER, null if GLOBAL)",
            "example": "center123"
          }
        },
        "required": [
          "permissionId"
        ]
      }
    }
  }
}